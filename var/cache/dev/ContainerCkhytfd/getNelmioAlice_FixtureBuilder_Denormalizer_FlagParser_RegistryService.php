<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'nelmio_alice.fixture_builder.denormalizer.flag_parser.registry' shared service.

include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParserInterface.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/IsAServiceTrait.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/FlagParserRegistry.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/ChainableFlagParserInterface.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/Chainable/ConfiguratorFlagParser.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/Chainable/ExtendFlagParser.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/Chainable/OptionalFlagParser.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/Chainable/TemplateFlagParser.php';
include_once $this->targetDirs[3].'/vendor/nelmio/alice/src/FixtureBuilder/Denormalizer/FlagParser/Chainable/UniqueFlagParser.php';

return $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.registry'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\FlagParserRegistry(array(0 => ${($_ = isset($this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator']) ? $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator'] : $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.configurator'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\ConfiguratorFlagParser()) && false ?: '_'}, 1 => ${($_ = isset($this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend']) ? $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend'] : $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.extend'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\ExtendFlagParser()) && false ?: '_'}, 2 => ${($_ = isset($this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional']) ? $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional'] : $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.optional'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\OptionalFlagParser()) && false ?: '_'}, 3 => ${($_ = isset($this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template']) ? $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template'] : $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.template'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\TemplateFlagParser()) && false ?: '_'}, 4 => ${($_ = isset($this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique']) ? $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique'] : $this->services['nelmio_alice.fixture_builder.denormalizer.flag_parser.chainable.unique'] = new \Nelmio\Alice\FixtureBuilder\Denormalizer\FlagParser\Chainable\UniqueFlagParser()) && false ?: '_'}));
